<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>nl.tudelft.simulation</groupId>
	<artifactId>supplychain-parent</artifactId>
	<version>3.0</version>

	<packaging>pom</packaging>

	<name>Supply chain simulation parent project</name>
	<description>Supply chain simulation parent project</description>

	<organization>
		<name>Delft University of Technology</name>
		<url>https://www.tudelft.nl</url>
	</organization>

	<inceptionYear>2003</inceptionYear>

	<modules>
		<module>../supplychain-core</module>
		<module>../supplychain-swing</module>
		<module>../supplychain-demo</module>
	</modules>

	<properties>
		<jdk.version>11</jdk.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>${jdk.version}</maven.compiler.source>
		<maven.compiler.target>${jdk.version}</maven.compiler.target>

		<supplychain.version>${project.version}</supplychain.version>
		<djutils.version>2.2.0</djutils.version>
		<djunits.version>5.1.2</djunits.version>
		<dsol.version>4.2.1</dsol.version>
		<tinylog.version>1.3.6</tinylog.version>
		<junit.version>4.13.2</junit.version>
		<jakarta.annotation.version>2.1.1</jakarta.annotation.version>
		<gson.version>2.10.1</gson.version>

		<maven.compiler.version>3.12.1</maven.compiler.version>
		<maven.site.version>3.12.1</maven.site.version>
		<maven.install.version>3.0.1</maven.install.version>
		<maven.source.version>3.2.1</maven.source.version>
		<maven.javadoc.version>3.4.1</maven.javadoc.version>
		<maven.resources.version>3.3.0</maven.resources.version>
		<maven.checkstyle.version>3.1.2</maven.checkstyle.version>
		<checkstyle.version>8.35</checkstyle.version>
		<maven.surefire.version>3.0.0-M7</maven.surefire.version>
		<maven.surefire-report.version>3.0.0-M7</maven.surefire-report.version>
		<maven.failsafe.version>3.0.0-M7</maven.failsafe.version>
		<maven.jacoco.version>0.8.8</maven.jacoco.version>
		<maven.spotbugs.version>4.7.1.1</maven.spotbugs.version>
		<spotbugs.version>4.7.1</spotbugs.version>
		<maven.project-info-reports.version>3.4.0</maven.project-info-reports.version>
		<maven.jxr.version>3.2.0</maven.jxr.version>
		<maven.taglist.version>3.0.0</maven.taglist.version>
		<maven.pmd.version>3.17.0</maven.pmd.version>
		<maven.changes.version>2.12.1</maven.changes.version>
		<maven.deploy.version>3.0.0</maven.deploy.version>
		<nexus-staging.version>1.6.7</nexus-staging.version>
		<maven.gpg.version>1.5</maven.gpg.version>
		<flatten.maven.version>1.3.0</flatten.maven.version>
		<maven-jaxb2.version>0.15.1</maven-jaxb2.version>
	</properties>


	<!-- Dependencies for the subprojects -->

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.djunits</groupId>
				<artifactId>djunits</artifactId>
				<version>${djunits.version}</version>
			</dependency>

			<dependency>
				<groupId>org.djutils</groupId>
				<artifactId>djutils</artifactId>
				<version>${djutils.version}</version>
			</dependency>

			<dependency>
				<groupId>org.djutils</groupId>
				<artifactId>djutils-draw</artifactId>
				<version>${djutils.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>dsol-base</artifactId>
				<version>${dsol.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>dsol-naming</artifactId>
				<version>${dsol.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>dsol-introspection</artifactId>
				<version>${dsol.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>dsol-core</artifactId>
				<version>${dsol.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>dsol-animation</artifactId>
				<version>${dsol.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>dsol-swing</artifactId>
				<version>${dsol.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>supplychain-core</artifactId>
				<version>${supplychain.version}</version>
			</dependency>

			<dependency>
				<groupId>nl.tudelft.simulation</groupId>
				<artifactId>supplychain-swing</artifactId>
				<version>${supplychain.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.tinylog</groupId>
				<artifactId>tinylog</artifactId>
				<version>${tinylog.version}</version>
			</dependency>

			<dependency>
				<groupId>jakarta.annotation</groupId>
				<artifactId>jakarta.annotation-api</artifactId>
				<version>${jakarta.annotation.version}</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>


	<!-- Build Settings -->

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.version}</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${maven.install.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven.source.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.version}</version>
				<configuration>
					<links>
						<link>https://docs.oracle.com/en/java/javase/11/docs/api/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-base/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-naming/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-introspection/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-core/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-animation/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-swing/apidocs/</link>
						<link>https://tinylog.org/v1/javadoc/</link>
						<link>https://djunits.org/docs/latest/apidocs/</link>
						<link>https://djutils.org/docs/latest/djutils/apidocs/</link>
						<link>https://djutils.org/docs/latest/djutils-serialization/apidocs/</link>
						<link>https://djutils.org/docs/latest/djutils-draw/apidocs/</link>
					</links>
					<minmemory>256m</minmemory>
					<maxmemory>1g</maxmemory>
					<show>package</show>
					<stylesheetfile>${basedir}/config/javadoc/stylesheet.css</stylesheetfile>
					<detectJavaApiLink>false</detectJavaApiLink>
					<detectOfflineLinks>true</detectOfflineLinks>
					<detectLinks>false</detectLinks>
					<release>${jdk.version}</release>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.version}</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>${checkstyle.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
				<configuration>
					<runOrder>alphabetical</runOrder>
					<!-- Sets the VM argument line used when unit tests are run. -->
					<argLine>${surefireArgLine}</argLine>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
					<!-- Make sure every unit test is run as a separate process to avoid 
						static leaks between tests -->
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.version}</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven.jacoco.version}</version>
				<executions>

					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<!-- phase>pre-integration-test</phase -->
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>
								${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>

					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>
								${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten.maven.version}</version>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>oss</flattenMode>
					<pomElements>
						<distributionManagement>remove</distributionManagement>
						<repositories>remove</repositories>
					</pomElements>
				</configuration>
				<executions>
					<!-- enable flattening -->
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<!-- ensure proper cleanup -->
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.version}</version>
				<configuration>
					<chmod>true</chmod>
					<relativizeDecorationLinks>false</relativizeDecorationLinks>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
				<executions>
					<execution>
						<id>attach-descriptor</id>
						<goals>
							<goal>attach-descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven.deploy.version}</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${maven.taglist.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.project-info-reports.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire-report.version}</version>
			</plugin>

			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${maven.spotbugs.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.version}</version>
			</plugin>

		</plugins>

	</build>

	<reporting>
		<outputDirectory>${basedir}/target/site</outputDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.project-info-reports.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>dependencies</report>
							<report>team</report>
							<report>mailing-lists</report>
							<report>licenses</report>
							<report>scm</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.version}</version>

				<configuration>
					<links>
						<link>https://docs.oracle.com/en/java/javase/11/docs/api/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-base/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-naming/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-introspection/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-core/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-animation/apidocs/</link>
						<link>
							https://simulation.tudelft.nl/dsol/docs/latest/dsol-swing/apidocs/</link>
						<link>https://tinylog.org/v1/javadoc/</link>
						<link>https://djunits.org/docs/latest/apidocs/</link>
						<link>https://djutils.org/docs/latest/djutils/apidocs/</link>
						<link>https://djutils.org/docs/latest/djutils-serialization/apidocs/</link>
						<link>https://djutils.org/docs/latest/djutils-draw/apidocs/</link>
					</links>
					<minmemory>256m</minmemory>
					<maxmemory>1g</maxmemory>
					<show>package</show>
					<stylesheetfile>${basedir}/config/javadoc/stylesheet.css</stylesheetfile>
					<detectJavaApiLink>false</detectJavaApiLink>
					<detectOfflineLinks>true</detectOfflineLinks>
					<detectLinks>false</detectLinks>
					<release>${jdk.version}</release>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>test-html</id>
						<reports>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.version}</version>
				<configuration>
					<configLocation>/config/dsol-checks.xml</configLocation>
					<suppressionsLocation>/config/checkstyle_suppressions.xml</suppressionsLocation>
					<suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
				</configuration>
				<reportSets>
					<reportSet>
						<configuration>
							<enableRulesSummary>true</enableRulesSummary>
						</configuration>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire-report.version}</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven.jacoco.version}</version>
				<reportSets>
					<reportSet>
						<inherited>true</inherited>
						<reports>
							<report>report</report>
						</reports>
						<configuration>
							<dataFile>
								${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</reportSet>
					<!-- Turn this on when JaCoCo Integration tests are run. Otherwise, 
						the unit test report is also not generated. -->
					<!-- reportSet -->
					<!-- inherited>true</inherited -->
					<!-- reports -->
					<!-- report>report</report -->
					<!-- /reports -->
					<!-- configuration -->
					<!-- dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile -->
					<!-- outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory -->
					<!-- /configuration -->
					<!-- /reportSet -->
				</reportSets>
			</plugin>

			<!-- todos -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>${maven.taglist.version}</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>Open issues in the code</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>exact</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>exact</matchType>
									</tag>
									<tag>
										<matchString>XXX</matchString>
										<matchType>exact</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${maven.spotbugs.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven.pmd.version}</version>
				<configuration>
					<targetJdk>${jdk.version}</targetJdk>
					<skipEmptyReport>false</skipEmptyReport>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>${maven.changes.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>


	<!-- Profiles for deployment -->

	<profiles>
		<profile>

			<id>release</id>

			<build>

				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${nexus-staging.version}</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>

					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>${maven.deploy.version}</version>
						<executions>
							<execution>
								<id>default-deploy</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven.gpg.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<!-- do not ask for passphrase manually -->
									<gpgArguments>
										<arg>--pinentry-mode</arg>
										<arg>loopback</arg>
									</gpgArguments>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>

			</build>
		</profile>
	</profiles>

	<!-- Deployment settings -->

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<scm>
		<connection>scm:git:git://github.com/averbraeck/dsol-supplychain.git</connection>
		<developerConnection>
      scm:git:ssh://github.com:averbraeck/dsol-supplychain.git</developerConnection>
		<url>https://github.com/averbraeck/dsol-supplychain/tree/master</url>
	</scm>


	<licenses>
		<license>
			<name>BSD-3 style license</name>
			<url>https://opensource.org/licenses/BSD-3-Clause</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>averbraeck</id>
			<name>Alexander Verbraeck</name>
			<email>a.verbraeck@tudelft.nl</email>
			<url>https://www.tbm.tudelft.nl/averbraeck</url>
			<organization>Delft University of Technology, the Netherlands</organization>
			<organizationUrl>https://simulation.tudelft.nl</organizationUrl>
			<timezone>1</timezone>
			<roles>
				<role>architect</role>
				<role>developer</role>
				<role>maintainance</role>
			</roles>
		</developer>
	</developers>

</project>
